version: '3.8'

services:
  # Genshin Impact API Service
  genshin-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: genshin-api
    ports:
      - "8000:8000"
    environment:
      # MongoDB Atlas Configuration
      - MONGODB_URL=mongodb+srv://draunzler:<db_password>@test.nmxzjdn.mongodb.net/
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - DATABASE_NAME=genshin_assistant
      
      # API Configuration
      - API_HOST=0.0.0.0
      - API_PORT=8000
      
      # Update interval (hours)
      - UPDATE_INTERVAL=4
      
      # Redis Configuration (optional)
      - REDIS_URL=redis://redis:6379
      
      # Google API Keys (set these in .env file)
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - GOOGLE_CSE_ID=${GOOGLE_CSE_ID}
      - GOOGLE_CSE_API_KEY=${GOOGLE_CSE_API_KEY}
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - genshin-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MongoDB Atlas is used instead of local MongoDB
  # No local MongoDB container needed

  # Redis Cache (Optional)
  redis:
    image: redis:7.2-alpine
    container_name: genshin-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - genshin-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MongoDB Express not needed for Atlas
  # Use MongoDB Atlas web interface instead

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: genshin-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - genshin-api
    networks:
      - genshin-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  redis_data:
    driver: local

networks:
  genshin-network:
    driver: bridge 